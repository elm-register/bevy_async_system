[package]
name = "bevy_flurx"
version = "0.3.3-beta.2"
edition = "2021"
authors = ["elm"]
categories = ["asynchronous", "game-development"]
description = "Provides the ability to wait for game status asynchronously."
keywords = ["game", "gamedev", "bevy", "async"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/not-elm/bevy_flurx"

[workspace]
exclude = ["benches"]

[[bench]]
name = "cmp_countup"
path = "benches/cmp_countup.rs"
harness = false

[[bench]]
name = "cmp_repeat_countup"
path = "benches/cmp_repeat_countup.rs"
harness = false

[[bench]]
name = "sequence"
path = "benches/sequence.rs"
harness = false

[dependencies]
bevy = { version = "0.13.2", default-features = false }
flurx = { version = "0.1.4", features = ["sync"] }
futures-polling = "0.1.1"

[dev-dependencies]
bevy = { version = "0.13.2" }
bevy_test_helper = { git = "https://github.com/not-elm/bevy_test_helper" }
reqwest = "0.12.2"
futures = "0.3.30"
criterion = { version = "0.5.1", features = ["plotters", "html_reports"] }

[features]
default = ["audio"]
audio = ["bevy/bevy_audio", "bevy/bevy_asset"]

[workspace.lints.clippy]
type_complexity = "allow"
doc_markdown = "warn"
manual_let_else = "warn"
undocumented_unsafe_blocks = "warn"
redundant_else = "warn"
match_same_arms = "warn"
semicolon_if_nothing_returned = "warn"

[workspace.lints.rust]
missing_docs = "warn"

[lints]
workspace = true